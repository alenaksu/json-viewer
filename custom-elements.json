{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/JsonViewer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "JsonViewer",
          "members": [
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "any | undefined"
              },
              "attribute": "data"
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "JsonViewerState"
              },
              "privacy": "private",
              "default": "{\n        expanded: {},\n        filtered: {},\n        highlight: null\n    }"
            },
            {
              "kind": "method",
              "name": "setState",
              "privacy": "private",
              "parameters": [
                {
                  "name": "stateFn",
                  "type": {
                    "text": "(state: JsonViewerState, el: JsonViewer) => Partial<JsonViewerState>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "handlePropertyClick"
            },
            {
              "kind": "method",
              "name": "expand",
              "parameters": [
                {
                  "name": "glob",
                  "type": {
                    "text": "string | RegExp"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "expandAll"
            },
            {
              "kind": "method",
              "name": "collapseAll"
            },
            {
              "kind": "method",
              "name": "collapse",
              "parameters": [
                {
                  "name": "glob",
                  "type": {
                    "text": "string | RegExp"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "search",
              "parameters": [
                {
                  "name": "criteria",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "filter",
              "parameters": [
                {
                  "name": "criteria",
                  "type": {
                    "text": "string | RegExp"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resetFilter"
            },
            {
              "kind": "method",
              "name": "renderObject",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "text": "Record<string, unknown>"
                  }
                },
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNode",
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "path",
                  "default": "''"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNodePreview",
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderValue",
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "text": "Primitive | null"
                  }
                },
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "data",
              "type": {
                "text": "any | undefined"
              },
              "fieldName": "data"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "json-viewer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "JsonViewer",
          "declaration": {
            "name": "JsonViewer",
            "module": "src/JsonViewer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "json-viewer",
          "declaration": {
            "name": "JsonViewer",
            "module": "/src/JsonViewer"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stateChange.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toggleNode",
          "parameters": [
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "expanded",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "expand",
          "parameters": [
            {
              "name": "regexOrGlob",
              "type": {
                "text": "string | RegExp"
              }
            },
            {
              "name": "isExpanded",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "filter",
          "parameters": [
            {
              "name": "regexOrGlob",
              "type": {
                "text": "string | RegExp"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "resetFilter"
        },
        {
          "kind": "function",
          "name": "highlight",
          "parameters": [
            {
              "name": "path",
              "type": {
                "text": "string | null"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toggleNode",
          "declaration": {
            "name": "toggleNode",
            "module": "src/stateChange.ts"
          }
        },
        {
          "kind": "js",
          "name": "expand",
          "declaration": {
            "name": "expand",
            "module": "src/stateChange.ts"
          }
        },
        {
          "kind": "js",
          "name": "filter",
          "declaration": {
            "name": "filter",
            "module": "src/stateChange.ts"
          }
        },
        {
          "kind": "js",
          "name": "resetFilter",
          "declaration": {
            "name": "resetFilter",
            "module": "src/stateChange.ts"
          }
        },
        {
          "kind": "js",
          "name": "highlight",
          "declaration": {
            "name": "highlight",
            "module": "src/stateChange.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isRegex",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "RegExp | any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getType",
          "return": {
            "type": {
              "text": "SupportedTypes"
            }
          },
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPrimitive",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isNode",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPrimitiveOrNode",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "generateNodePreview",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "node",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "{ nodeCount = 3, maxLength = 15 }",
              "default": "{}",
              "type": {
                "text": "{ nodeCount?: number; maxLength?: number }"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "deepTraverse",
          "return": {
            "type": {
              "text": "Generator<[any, string, string[]]>"
            }
          },
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "checkGlob",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "glob",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Matches a string using a glob-like syntax)"
        },
        {
          "kind": "variable",
          "name": "JSONConverter",
          "type": {
            "text": "ComplexAttributeConverter"
          },
          "default": "{\n    fromAttribute: (value: string): any => {\n        return value && value.trim() ? JSON.parse(value) : undefined;\n    },\n    toAttribute: (value: any): string => {\n        return JSON.stringify(value);\n    }\n}"
        },
        {
          "kind": "function",
          "name": "isDefined",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isMatchingPath",
          "parameters": [
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "criteria",
              "type": {
                "text": "string | RegExp"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isRegex",
          "declaration": {
            "name": "isRegex",
            "module": "src/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "getType",
          "declaration": {
            "name": "getType",
            "module": "src/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isPrimitive",
          "declaration": {
            "name": "isPrimitive",
            "module": "src/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isNode",
          "declaration": {
            "name": "isNode",
            "module": "src/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isPrimitiveOrNode",
          "declaration": {
            "name": "isPrimitiveOrNode",
            "module": "src/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "generateNodePreview",
          "declaration": {
            "name": "generateNodePreview",
            "module": "src/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "deepTraverse",
          "declaration": {
            "name": "deepTraverse",
            "module": "src/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "checkGlob",
          "declaration": {
            "name": "checkGlob",
            "module": "src/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "JSONConverter",
          "declaration": {
            "name": "JSONConverter",
            "module": "src/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDefined",
          "declaration": {
            "name": "isDefined",
            "module": "src/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isMatchingPath",
          "declaration": {
            "name": "isMatchingPath",
            "module": "src/utils.ts"
          }
        }
      ]
    }
  ]
}
